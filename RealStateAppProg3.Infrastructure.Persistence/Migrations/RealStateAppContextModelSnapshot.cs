// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealStateAppProg3.Infrastructure.Persistence.Context;

#nullable disable

namespace RealStateAppProg3.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(RealStateAppContext))]
    partial class RealStateAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.Property", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Bathrooms")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTypeProperty")
                        .HasColumnType("int");

                    b.Property<int>("IdTypeSale")
                        .HasColumnType("int");

                    b.Property<string>("IdUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberRooms")
                        .HasColumnType("int");

                    b.Property<int>("SizeInMeters")
                        .HasColumnType("int");

                    b.Property<string>("UrlImage1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Code");

                    b.HasIndex("IdTypeProperty");

                    b.HasIndex("IdTypeSale");

                    b.ToTable("Property", (string)null);
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.PropertyFav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IdProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProperty");

                    b.ToTable("PropertyFav");
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.TypeProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeProperty", (string)null);
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.TypeSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeSale", (string)null);
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.Upgrades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Upgrade", (string)null);
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.UpgradesProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IdProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdUpgrade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProperty");

                    b.HasIndex("IdUpgrade");

                    b.ToTable("UpgradesProperty", (string)null);
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.Property", b =>
                {
                    b.HasOne("RealStateAppProg3.Core.Domain.Entities.TypeProperty", "TypeProperty")
                        .WithMany("Properties")
                        .HasForeignKey("IdTypeProperty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateAppProg3.Core.Domain.Entities.TypeSale", "TypeSale")
                        .WithMany("Properties")
                        .HasForeignKey("IdTypeSale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeProperty");

                    b.Navigation("TypeSale");
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.PropertyFav", b =>
                {
                    b.HasOne("RealStateAppProg3.Core.Domain.Entities.Property", "Property")
                        .WithMany("propertyFavs")
                        .HasForeignKey("IdProperty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.UpgradesProperty", b =>
                {
                    b.HasOne("RealStateAppProg3.Core.Domain.Entities.Property", "Property")
                        .WithMany("Upgrades")
                        .HasForeignKey("IdProperty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealStateAppProg3.Core.Domain.Entities.Upgrades", "Upgrades")
                        .WithMany("Properties")
                        .HasForeignKey("IdUpgrade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("Upgrades");
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.Property", b =>
                {
                    b.Navigation("Upgrades");

                    b.Navigation("propertyFavs");
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.TypeProperty", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.TypeSale", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("RealStateAppProg3.Core.Domain.Entities.Upgrades", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
